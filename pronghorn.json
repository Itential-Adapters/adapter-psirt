{
  "id": "@itentialopensource/adapter-psirt",
  "type": "Adapter",
  "export": "Psirt",
  "title": "Psirt",
  "src": "adapter.js",
  "roles": [
    "admin"
  ],
  "methods": [
    {
      "name": "updateAdapterConfiguration",
      "summary": "Updates the adapter configuration",
      "description": "Updates the adapter configuration file with the provided changes",
      "input": [
        {
          "name": "configFile",
          "type": "string",
          "info": "The name of the file to change",
          "required": true,
          "schema": {
            "title": "configFile",
            "type": "string"
          }
        },
        {
          "name": "changes",
          "type": "object",
          "info": "JSON object containing the configuration changes",
          "required": true,
          "schema": {
            "title": "changes",
            "type": "object"
          }
        },
        {
          "name": "entity",
          "type": "string",
          "info": "The entity in which the changes are being made",
          "required": false,
          "schema": {
            "title": "entity",
            "type": "string"
          }
        },
        {
          "name": "type",
          "type": "string",
          "info": "The type of file to change - action, schema, or mock",
          "required": false,
          "schema": {
            "title": "type",
            "type": "string"
          }
        },
        {
          "name": "action",
          "type": "string",
          "info": "The action to be changed",
          "required": false,
          "schema": {
            "title": "action",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/updateAdapterConfiguration"
      },
      "task": true
    },
    {
      "name": "findPath",
      "summary": "Provides the ability to see if a particular API path is supported by the adapter",
      "description": "Provides the ability to see if a particular API path is supported by the adapter",
      "input": [
        {
          "name": "apiPath",
          "type": "string",
          "info": "The API Path you want to check - make sure to not include base path and version",
          "description": "The API Path you want to check - make sure to not include base path and version",
          "schema": {
            "title": "apiPath",
            "type": "string"
          },
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/findPath"
      },
      "task": true
    },
    {
      "name": "troubleshoot",
      "summary": "Runs troubleshoot script for adapter",
      "description": "Runs troubleshoot script for adapter",
      "input": [
        {
          "name": "props",
          "type": "object",
          "info": "Object containing configuration, healthcheck and auth properties {'connProps':{'host': 'api.service.com', 'base_path': '/', 'protocol': 'http', 'port': 443, 'version': 'v1'},'healthCheckEndpoint': '/healthcheck', 'auth': {'auth_method': 'no authentication', 'username': 'username', 'password': 'password'}}",
          "required": true,
          "schema": {
            "title": "props",
            "type": "object"
          }
        },
        {
          "name": "persistFlag",
          "type": "boolean",
          "info": "Whether the input properties should be saved",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing the test results",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/troubleshoot"
      },
      "task": true
    },
    {
      "name": "runHealthcheck",
      "summary": "Runs healthcheck script for adapter",
      "description": "Runs healthcheck script for adapter",
      "input": [],
      "output": {
        "name": "result",
        "type": "boolean",
        "description": "Whether healthcheck passed or failed"
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/runHealthcheck"
      },
      "task": true
    },
    {
      "name": "runConnectivity",
      "summary": "Runs connectivity check script for adapter",
      "description": "Runs connectivity check script for adapter",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing the test results",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/runConnectivity"
      },
      "task": true
    },
    {
      "name": "runBasicGet",
      "summary": "Runs basicGet script for adapter",
      "description": "Runs basicGet script for adapter",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing the test results",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/runBasicGet"
      },
      "task": true
    },
    {
      "name": "suspend",
      "summary": "Suspends the adapter",
      "description": "Suspends the adapter",
      "input": [
        {
          "name": "mode",
          "type": "enum",
          "enumerals": [
            "pause",
            "error"
          ],
          "info": "How incoming requests are handled. Defaults to 'pause'",
          "description": "How incoming requests are handled. Defaults to 'pause'",
          "schema": {
            "title": "mode",
            "type": "string"
          },
          "required": false
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing the adapter suspended status",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/suspend"
      },
      "task": true
    },
    {
      "name": "unsuspend",
      "summary": "Unsuspends the adapter",
      "description": "Unsuspends the adapter",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing the adapter suspended status",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/unsuspend"
      },
      "task": true
    },
    {
      "name": "getQueue",
      "summary": "Return the requests that are waiting in the queue if throttling is enabled",
      "description": "Return the requests that are waiting in the queue if throttling is enabled",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing the adapter queue",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getQueue"
      },
      "task": true
    },
    {
      "name": "genericAdapterRequest",
      "summary": "Makes the requested generic call",
      "description": "Makes the requested generic call",
      "input": [
        {
          "name": "uriPath",
          "type": "string",
          "info": "the path of the api call - do not include the host, port, base path or version",
          "description": "the path of the api call",
          "schema": {
            "title": "uriPath",
            "type": "string"
          },
          "required": true
        },
        {
          "name": "restMethod",
          "type": "string",
          "info": "the rest method (GET, POST, PUT, PATCH, DELETE)",
          "description": "the rest method (GET, POST, PUT, PATCH, DELETE)",
          "schema": {
            "title": "restMethod",
            "type": "string"
          },
          "required": true
        },
        {
          "name": "queryData",
          "type": "object",
          "info": "the query parameters to be put on the url (optional)",
          "description": "the query parameters to be put on the url (optional)",
          "schema": {
            "title": "queryData",
            "type": "object"
          },
          "required": false
        },
        {
          "name": "requestBody",
          "type": "object",
          "info": "the payload to be sent with the request (optional)",
          "description": "the payload to be sent with the request (optional)",
          "schema": {
            "title": "requestBody",
            "type": "object"
          },
          "required": false
        },
        {
          "name": "addlHeaders",
          "type": "object",
          "info": "additional headers to be put on the call (optional)",
          "description": "additional headers to be put on the call (optional)",
          "schema": {
            "title": "addlHeaders",
            "type": "object"
          },
          "required": false
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/genericAdapterRequest"
      },
      "task": true
    },
    {
      "name": "getAllAdvisories",
      "summary": "Obtain all published security advisories.",
      "description": "Obtain all published security advisories.",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "GET",
        "path": "/getAllAdvisories"
      },
      "task": true
    },
    {
      "name": "getAdvisoryByCveId",
      "summary": "Obtain an advisory using a given Common Vulnerability Enumerator (CVE).",
      "description": "Obtain an advisory using a given Common Vulnerability Enumerator (CVE).",
      "input": [
        {
          "name": "cveId",
          "type": "string",
          "info": "CVE Identifier (i.e., CVE-YYYY-NNNN)",
          "required": true,
          "schema": {
            "title": "cveId",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getAdvisoryByCveId"
      },
      "task": true
    },
    {
      "name": "getAdvisoryByAdvisoryId",
      "summary": "Obtain an advisory given its advisory ID.",
      "description": "Used to obtain an advisory given its advisory ID `advisory_id` (i.e., cisco-sa-20180221-ucdm)",
      "input": [
        {
          "name": "advisoryId",
          "type": "string",
          "info": "advisory ID",
          "required": true,
          "schema": {
            "title": "advisoryId",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getAdvisoryByAdvisoryId"
      },
      "task": true
    },
    {
      "name": "getAdvisoryBySeverity",
      "summary": "Obtain all security advisories for a given security impact rating (critical, high, medium, or low).",
      "description": "Used to obtain all security advisories for a given security impact rating (critical, high, medium, or low).",
      "input": [
        {
          "name": "severity",
          "type": "string",
          "info": "Critical, High, Medium, Low",
          "required": true,
          "schema": {
            "title": "severity",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getAdvisoryBySeverity"
      },
      "task": true
    },
    {
      "name": "getAdvisoryBySeverityLastpublished",
      "summary": "Obtain all security advisories for a given security impact rating and additionally filter based of lastpublished start date and enddate.",
      "description": "Used to obtain all security advisories for a given security impact rating (critical, high, medium, or low).",
      "input": [
        {
          "name": "severity",
          "type": "string",
          "info": "Used to obtain all advisories that have a security impact rating of critical",
          "required": true,
          "schema": {
            "title": "severity",
            "type": "string"
          }
        },
        {
          "name": "startDate",
          "type": "string",
          "info": "",
          "required": true,
          "schema": {
            "title": "startDate",
            "type": "string"
          }
        },
        {
          "name": "endDate",
          "type": "string",
          "info": "",
          "required": true,
          "schema": {
            "title": "endDate",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getAdvisoryBySeverityLastpublished"
      },
      "task": true
    },
    {
      "name": "getAdvisoryBySeverityFirstpublished",
      "summary": "Obtain all security advisories for a given security impact rating and additionally filter based of firstpublished start date and enddate.",
      "description": "Used to obtain all security advisories for a given security impact rating (critical, high, medium, or low) and additionally filter based of firstpublished start date and enddate.",
      "input": [
        {
          "name": "severity",
          "type": "string",
          "info": "Used to obtain all advisories that have a security impact rating of critical",
          "required": true,
          "schema": {
            "title": "severity",
            "type": "string"
          }
        },
        {
          "name": "startDate",
          "type": "string",
          "info": "",
          "required": true,
          "schema": {
            "title": "startDate",
            "type": "string"
          }
        },
        {
          "name": "endDate",
          "type": "string",
          "info": "",
          "required": true,
          "schema": {
            "title": "endDate",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getAdvisoryBySeverityFirstpublished"
      },
      "task": true
    },
    {
      "name": "getAdvisoryByYear",
      "summary": "Obtain all security advisories that have were originally published in a specific year.",
      "description": "Obtain all security advisories that have were originally published in a specific year.",
      "input": [
        {
          "name": "year",
          "type": "string",
          "info": "The four digit year.",
          "required": true,
          "schema": {
            "title": "year",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getAdvisoryByYear"
      },
      "task": true
    },
    {
      "name": "getLatestAdvisoryByNumber",
      "summary": "Obtain all the latest security advisories given an absolute number.",
      "description": "Used to obtain all the latest security advisories given an absolute number. For instance, the latest 10 or latest 5.",
      "input": [
        {
          "name": "number",
          "type": "number",
          "info": "An absolute number to obtain the latest security advisories.",
          "required": true,
          "schema": {
            "title": "number",
            "type": "number"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getLatestAdvisoryByNumber"
      },
      "task": true
    },
    {
      "name": "getAdvisoryByProductName",
      "summary": "Obtain all the advisories that affects the given product name.",
      "description": "Used to obtain all the advisories that affects the given product name.",
      "input": [
        {
          "name": "product",
          "type": "string",
          "info": "An product name to obtain security advisories that matches given product name.",
          "required": true,
          "schema": {
            "title": "product",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getAdvisoryByProductName"
      },
      "task": true
    },
    {
      "name": "getAdvisoryByIOSVersion",
      "summary": "Obtain all advisories that affects the given ios version",
      "description": "Used to obtain all advisories that affects the given ios version",
      "input": [
        {
          "name": "version",
          "type": "string",
          "info": "IOS version to obtain security advisories",
          "required": true,
          "schema": {
            "title": "version",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getAdvisoryByIOSVersion"
      },
      "task": true
    },
    {
      "name": "getAdvisoryByIOSXEVersion",
      "summary": "Obtain all advisories that affects the given iosxe version.",
      "description": "Used to obtain all advisories that affects the given iosxe version",
      "input": [
        {
          "name": "version",
          "type": "string",
          "info": "IOSXE version to obtain security advisories",
          "required": true,
          "schema": {
            "title": "version",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getAdvisoryByIOSXEVersion"
      },
      "task": true
    },
    {
      "name": "getSecurityAdvisoriesBugidByBugId",
      "summary": "SecurityAdvisoriesBugidByBugId_GET",
      "description": "Used to obtain an advisory using a given bug_id . The `bug_id` format is start with CSC.\n",
      "input": [
        {
          "name": "bugId",
          "type": "string",
          "info": "BUG Identifier (i.e., CSCxyNNNNN): string",
          "required": true,
          "schema": {
            "title": "bugId",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getSecurityAdvisoriesBugidByBugId"
      },
      "task": true
    },
    {
      "name": "getSecurityAdvisoriesAci",
      "summary": "SecurityAdvisoriesAci_GET",
      "description": "Used to obtain all advisories that affects the given aci version.\n",
      "input": [
        {
          "name": "version",
          "type": "string",
          "info": "IOS version to obtain security advisories: string",
          "required": true,
          "schema": {
            "title": "version",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getSecurityAdvisoriesAci"
      },
      "task": true
    },
    {
      "name": "getSecurityAdvisoriesNxos",
      "summary": "SecurityAdvisoriesNxos_GET",
      "description": "Used to obtain all advisories that affects the given nxos version.\n",
      "input": [
        {
          "name": "version",
          "type": "string",
          "info": "NXOS version to obtain security advisories: string",
          "required": true,
          "schema": {
            "title": "version",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getSecurityAdvisoriesNxos"
      },
      "task": true
    }
  ]
}